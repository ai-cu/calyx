import "primitives/std.lib";
import "primitives/bitnum/math.futil";
component main() -> () {
  cells {
    out = std_mem_d1(32, 1, 1);
    three_point_five = std_mem_d1(32, 1, 1);
    exp_reg = std_reg(32);
    std_exp0 = std_exp();
  }
  wires {
    group init {
      three_point_five.addr0 = 1'd0;
      exp_reg.in = three_point_five.read_data;
      exp_reg.write_en = 1'd1;
      init[done] = exp_reg.done;
    }
    group fill_memory {
      out.write_data = std_exp0.out;
      out.addr0 = 1'd0;
      out.write_en = 1'd1;
      fill_memory[done] = out.done;
    }
  }
  control {
    seq {
      init;
      invoke std_exp0(exponent=exp_reg.out)();
      fill_memory;
    }
  }
}
